'use server';

/**
 * @fileOverview A Genkit flow for generating enhanced responses by having the AI reason through the request.
 *
 * - generateEnhancedResponse - A function that generates an enhanced response based on the input query.
 * - GenerateEnhancedResponseInput - The input type for the generateEnhancedResponse function.
 * - GenerateEnhancedResponseOutput - The output type for the generateEnhancedResponse function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateEnhancedResponseInputSchema = z.object({
  query: z.string().describe('The user query to be processed.'),
});
export type GenerateEnhancedResponseInput = z.infer<typeof GenerateEnhancedResponseInputSchema>;

const GenerateEnhancedResponseOutputSchema = z.object({
  enhancedResponse: z.string().describe('The enhanced response generated by the AI.'),
});
export type GenerateEnhancedResponseOutput = z.infer<typeof GenerateEnhancedResponseOutputSchema>;

export async function generateEnhancedResponse(input: GenerateEnhancedResponseInput): Promise<GenerateEnhancedResponseOutput> {
  return generateEnhancedResponseFlow(input);
}

const analyzeQueryPrompt = ai.definePrompt({
  name: 'analyzeQueryPrompt',
  input: {schema: GenerateEnhancedResponseInputSchema},
  output: z.object({
    analysis: z.string().describe('A detailed analysis of the user query, identifying key aspects and potential sub-queries needed for a comprehensive answer.'),
  }),
  prompt: `You are an AI assistant tasked with analyzing user queries to provide enhanced responses. Analyze the following query and identify the key aspects and potential sub-queries needed for a comprehensive answer.\n\nQuery: {{{query}}}`,
});

const synthesizeResponsePrompt = ai.definePrompt({
  name: 'synthesizeResponsePrompt',
  input: z.object({
    query: z.string().describe('The original user query.'),
    analysis: z.string().describe('The detailed analysis of the user query.'),
  }),
  output: GenerateEnhancedResponseOutputSchema,
  prompt: `You are an AI assistant tasked with generating enhanced responses to user queries. Based on the following analysis of the query, synthesize a comprehensive and thoughtful response.\n\nQuery: {{{query}}}\nAnalysis: {{{analysis}}}\n\nEnhanced Response:`, 
});

const generateEnhancedResponseFlow = ai.defineFlow(
  {
    name: 'generateEnhancedResponseFlow',
    inputSchema: GenerateEnhancedResponseInputSchema,
    outputSchema: GenerateEnhancedResponseOutputSchema,
  },
  async input => {
    const {output: analysisResult} = await analyzeQueryPrompt(input);
    const {output: enhancedResponseResult} = await synthesizeResponsePrompt({
      query: input.query,
      analysis: analysisResult!.analysis,
    });

    return enhancedResponseResult!;
  }
);
